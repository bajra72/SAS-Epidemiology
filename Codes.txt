/*Univariate analysis of variables and dichotomous outcome*/
proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Respiratory_symptoms;
Run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Seizure;
Run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Diarrhea;
run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Mosquito_contact;
run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Tick_contact;
run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = Immune_compromised;
run;

proc logistic data=TMP1.ii;
    model Organism_Disease_identified(event='1') = History_of_consuming_undercooked;
run;

/*Backward Selection to Predict MTB*/ 

/*Whole Variables*/
proc logistic data=TMP1.ii;
    class fatality rash Respiratory_symptoms Seizure Mosquito_contact Immune_compromised History_of_consuming_undercooked (param=ref ref='0'); /* optional if you want to specify reference levels */
    model Organism_Disease_identified(event='1') = age fatality rash Respiratory_symptoms Seizure Mosquito_contact Immune_compromised History_of_consuming_undercooked;
run;

/*Remove Mosquito_contact*/
proc logistic data=TMP1.ii;
    class fatality rash Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked (param=ref ref='0'); /* optional if you want to specify reference levels */
    model Organism_Disease_identified(event='1') = age fatality rash Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
run;

/*Remove Fatality*/
proc logistic data=TMP1.ii;
    class rash Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked (param=ref ref='0'); /* optional if you want to specify reference levels */
    model Organism_Disease_identified(event='1') = age rash Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
run;

/*Remove Rash*/
proc logistic data=TMP1.ii;
    class Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked (param=ref ref='0'); /* optional if you want to specify reference levels */
    model Organism_Disease_identified(event='1') = age Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
run;

/*Create ROC*/
proc logistic data=TMP1.ii plots=roc;
class Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked (param=ref ref='0'); /* optional if you want to specify reference levels */
    model Organism_Disease_identified(event='1') = age Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
run;


/*Split Data*/
proc surveyselect data=TMP1.ii out=TMP1.sampled seed=2025
   samprate=0.8 outall;
run;

data TMP1.train TMP1.test;
    set TMP1.sampled;
    if selected = 1 then output TMP1.train;
    else output TMP1.test;
run;

/*Build Decision Tree with HPSPLIT*/
proc hpsplit data=TMP1.train maxdepth=5 maxbranch=2;
    class Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
    model Organism_Disease_identified(event='1') = 
         age Respiratory_symptoms Seizure Immune_compromised History_of_consuming_undercooked;
    grow gini;                     
    prune costcomplexity;          
    code file='tree_score.sas';    
run;

/*Score the Test Dataset Using the Trained Tree*/
data TMP1.test_scored;
    set TMP1.test;
    %include 'tree_score.sas';     /* Apply saved decision tree rules */
run;

/*Evaluate Tree Predictions*/
/*Threshold: P_1 >= 0.5 = predicted positive*/
data TMP1.test_scored;
    set TMP1.test_scored;
    pred_class = (P_1 >= 0.5);
run;

/*Confusion Matrix*/
proc freq data=TMP1.test_scored;
    tables Organism_Disease_identified*pred_class / norow nocol nopercent;
run;

/*ROC Curve and AUC*/
proc logistic data=TMP1.test_scored plots=roc;
    model Organism_Disease_identified(event='1') = P_1;
run;


